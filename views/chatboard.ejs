<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive Cards</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body>
    <!-- sent Massage sound -->
    <audio id="recieveMessageAudio">
        <source src="../img/recieveMessage.mp3" type="audio/mp3">
    </audio>

    <div class="w-full flex flex-col h-[calc(var(--vh,1vh)*100)] bg-gray-500">
        <div class="flex px-3 py-2 mx-0 text-white border-b border-gray-800" style="justify-content: space-between;">
            <div class="flex">
                <% if(user2=="Prattle AI" ) { %>
                    <img src="../img/logo 1.png" alt="Person 1" class="w-11 h-11 mr-1 p-[7px]">
                    <% } else { %>
                        <img src="../img/profile.png" alt="Person 1"
                            class="w-11 h-11 rounded-full mr-3 border border-gray-600">
                        <% } %>
                            <div>
                                <h2 id="takerusername" class="md:text-2xl mt-1 sm:mt-0 font-bold tracking-wide">
                                    <%= user2 %>
                                </h2>
                                <div id="userStatusDiv">
                                    <p class="text-xs md:text-sm text-gray-600 tracking-wide">
                                        <% if(user2=="Prattle AI" ) { %>
                                            AI ChatBot to help you
                                            <% } else { %>
                                                Offline
                                                <% } %>
                                    </p>
                                </div>
                            </div>
            </div>
            <div class="flex pt-3 px-1 gap-4">
                <i class="fa-solid fa-eraser text-gray-400 hover:text-white text-xl" title="Erase Chat"></i>
                <i class="fa-solid fa-user-slash text-gray-400 hover:text-white mt-1"></i>
                <i id="userDetailsBtn" class="fa-solid fa-circle-info text-gray-400 hover:text-white text-xl"></i>
                <!-- userDetails container -->
                <div id="userDetailsCont"
                    class="absolute py-2 px-3 bg-gray-700 rounded text-gray-300 w-[300px] right-0 m-2 mt-7 text-[12px] tracking-wider hidden overflow-hidden">
                    <p class="mb-1">Prattle userID: <span class="text-sm text-green-500 font-bold">
                            018<%= userDetails.id %>468
                        </span></p>
                    <p class="mb-1 flex">Joining&nbsp;Date:&nbsp;<span class="text-sm text-green-500 font-bold truncate">
                            <%= userDetails.joining_date %>
                        </span></p>
                    <p class="mb-1">
                        <%= userDetails.username %> have <span class="text-sm text-green-500 font-bold">
                                <%= userDetails.followed_user.length %>
                            </span> prattle friends
                    </p>
                </div>
            </div>
        </div>
        <div id="chatBox" class="flex-1 overflow-y-auto p-4 space-y-2 overflow-y-scroll">
            <!-- here is the chatbox where all messages are loaded -->
        </div>
        <div class="bg-gray-900 p-3">
            <p id="thinkLoading" class="hidden mt-8 font-medium text-gray-400 tracking-wide items-center animate-pulse delay-50">
                PrattleAI is Thinking
                <span class="ml-2 mt-3 flex space-x-1">
                    <span class="h-1 w-1 bg-blue-500 rounded-full animate-pulse"></span>
                    <span class="h-1 w-1 bg-blue-500 rounded-full animate-pulse delay-150"></span>
                    <span class="h-1 w-1 bg-blue-500 rounded-full animate-pulse delay-300"></span>
                </span>
            </p>
            <form id="sendChatInput" class="flex items-center">
                <input id="inputMessage" type="text" placeholder="Type a message..."
                    class="flex-1 border border-gray-600 text-white bg-gray-800 rounded py-2 px-4 outline-none focus:border-white">
                <button
                    class="ml-2 bg-green-700 text-white rounded px-4 py-2 hover:bg-green-600 outline-none focus:ring-blue-500">Send</button>
            </form>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <!-- <script src="../js/chat_board.js"></script> -->

    <script>
        document.querySelector('#userDetailsBtn').addEventListener('mouseover', () => {
            document.querySelector('#userDetailsCont').style.display = 'block';
        })

        document.querySelector('#userDetailsBtn').addEventListener('mouseout', () => {
            document.querySelector('#userDetailsCont').style.display = 'none';
        })

        // Function to leave the current room
        function leaveChatRoom() {
            socket.emit("leaveRoom", "<%= roomId %>");
        }

        // Handle user status update
        socket.on("userStatus", (data) => {
            const { username, status } = data;
            console.log(username + " is " + status);

            if (status === "online") {
                document.querySelector('#userStatusDiv').innerHTML = `<p class="text-sm text-green-600 tracking-wide">Online</p>`;
            } else {
                document.querySelector('#userStatusDiv').innerHTML = `<p class="text-sm text-gray-600 tracking-wide">Offline</p>`;
            }
        });

        // Emit start private chat event
        socket.emit("startPrivateChat", { user1: "<%= user1 %>", user2: "<%= user2 %>" });

        if ("<%= roomId %>" != "Prattle AI") {
            // Send a message
            document.querySelector('#sendChatInput').addEventListener('submit', async (e) => {
                e.preventDefault();

                let message = document.querySelector('#inputMessage').value.trim();

                if (message.length > 0) {
                    await socket.emit("privateMessage", { roomId: "<%= roomId %>", sender: "<%= user1 %>", message });

                    // Display sent message in chatbox
                    document.querySelector('#chatBox').innerHTML += `<div id="sendMessage" class="flex justify-end">
            <div class="bg-gray-800 text-white rounded-md py-3 px-4 max-w-[85%] lg:max-w-[65%]">
                <span class="flex justify-end text-green-600 text-[11px] whitespace-pre-wrap" style="margin: -5px -5px -2px 0px;">You</span>
                <p class="text-[17px] sm:text-md">${message}</p>
                <span class="text-[11px] text-gray-500 flex mt-1 -mb-2 -ml-2">${(() => {
                            return new Date().toLocaleTimeString("en-US", {
                                hour: '2-digit',
                                minute: '2-digit',
                                hour12: true,
                            });
                        })()}</span>
            </div>
        </div>`;

                    document.querySelector('#inputMessage').value = "";

                    document.querySelector('#chatBox').scrollTop = document.querySelector('#chatBox').scrollHeight;
                }
            });

            // Receive private message
            socket.off("privateMessage");
            socket.on("privateMessage", ({ sender, message }) => {
                console.log("private message sender: " + sender + ", message: " + message);

                if (message.length > 0) {
                    document.querySelector('#chatBox').innerHTML += `<div id="recieveMessage" class="flex justify-start">
            <div class="bg-gray-800 rounded-lg py-3 px-4 text-white max-w-[85%] lg:max-w-[65%]">
                <span class="flex justify-start text-blue-600 text-[11px]" style="margin: -5px 0px 0px -5px;">${sender}</span>
                <p class="text-[17px] sm:text-md">${message}</p>
                <span class="text-[11px] text-gray-500 justify-end flex mt-1 -mb-2 -mr-2">${(() => {
                            return new Date().toLocaleTimeString("en-US", {
                                hour: '2-digit',
                                minute: '2-digit',
                                hour12: true,
                            });
                        })()}</span>
            </div>
        </div>`;
                    document.querySelector('#chatBox').scrollTop = document.querySelector('#chatBox').scrollHeight;
                    document.querySelector('#recieveMessageAudio').play();
                }
            });

            // Handle disconnection
            socket.on("disconnect", () => {
                console.log("Client disconnected");
            });

        } else {
            // All the logic which is used to make AI chatbot is written here
            // Send a message
            document.querySelector('#sendChatInput').addEventListener('submit', async (e) => {
                e.preventDefault();

                let message = document.querySelector('#inputMessage').value.trim();

                if (message.length > 0) {
                    document.querySelector('#sendChatInput').classList.add("hidden");
                    document.querySelector('#thinkLoading').style.display = "flex";

                    socket.emit("chatbot_request", message);

                    // Display sent message in chatbox
                    document.querySelector('#chatBox').innerHTML += `<div id="sendMessage" class="flex justify-end">
            <div class="bg-gray-800 text-white rounded-md py-3 px-4 max-w-[85%] lg:max-w-[65%]">
                <span class="flex justify-end text-green-600 text-[11px] whitespace-pre-wrap" style="margin: -5px -5px -2px 0px;">You</span>
                <p>${message}</p>
                <span class="text-[11px] text-gray-500 flex mt-1 -ml-1">${(() => {
                            return new Date().toLocaleTimeString("en-US", {
                                hour: '2-digit',
                                minute: '2-digit',
                                hour12: true,
                            });
                        })()}</span>
            </div>
        </div>`;

                    document.querySelector('#inputMessage').value = "";

                    document.querySelector('#chatBox').scrollTop = document.querySelector('#chatBox').scrollHeight;
                }
            });

            // Receive chatbot message
            socket.off("chatbot_response");
            socket.on("chatbot_response", (message) => {
                console.log("bot message: " + message);

                if (message.length > 0) {
                    document.querySelector('#chatBox').innerHTML += `<div id="recieveMessage" class="flex justify-start">
            <div class="bg-gray-800 rounded-lg py-3 px-4 text-white max-w-[85%] lg:max-w-[65%]">
                <span class="flex justify-start text-blue-600 text-[11px]" style="margin: -5px 0px 0px -5px;">Prattle AI</span>
                <p class="whitespace-pre-wrap break-words">${message}</p>
                <span class="text-[11px] text-gray-500 justify-end flex mt-1 -mr-1">${(() => {
                            return new Date().toLocaleTimeString("en-US", {
                                hour: '2-digit',
                                minute: '2-digit',
                                hour12: true,
                            });
                        })()}</span>
            </div>
        </div>`;
                    document.querySelector('#chatBox').scrollTop = document.querySelector('#chatBox').scrollHeight;
                    document.querySelector('#recieveMessageAudio').play();

                    document.querySelector('#thinkLoading').style.display = "none"
                    document.querySelector('#sendChatInput').classList.remove("hidden");
                }
            });
        }

    </script>
</body>

</html>